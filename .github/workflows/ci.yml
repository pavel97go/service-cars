name: Go CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (Go ${{ matrix.go }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.22.x', '1.23.x' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true

      - name: Download deps
        run: go mod download

      - name: Build all packages
        run: go build -v ./...

    lint:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go (for lint)
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.x'   

      - name: Download deps for lint
        run: go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.8
          
          args: --config=.golangci.yml --go 1.24 ./...

  test:
    name: Test & Race (Go ${{ matrix.go }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.22.x', '1.23.x' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true

      - name: Download deps
        run: go mod download

      - name: Run unit tests with coverage
        run: go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: Race detector
        run: go test ./... -race

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.go }}
          path: coverage.out
          if-no-files-found: ignore